# Python Django
# Test a Django project on multiple versions of Python.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

trigger:
- master

variables:
- name: azureServiceConnectionId
  value: f2c72fb6-a706-4172-9ddb-3108855d8a1c
- name: webAppName
  value: stevensoranno

stages:
- stage: Build
  displayName: Build Stage
  jobs:
  - job: Build
    displayName: Build job
    pool:
      vmImage: 'ubuntu-latest'
  
    steps:
    - script: |
        sudo apt-get update
        sudo apt-get install python3.8
        python --version
        python3 --version
        sudo rm /usr/bin/python3
        sudo ln -s python3.8 /usr/bin/python3
        python3 --version
        ls
        pip3 install -r requirements.txt
        pip3 install unittest-xml-reporting
      displayName: 'Install prerequisites'

    - script: |
        cd 'projecttwo'
        python3 manage.py test --testrunner xmlrunner.extra.djangotestrunner.XMLTestRunner --no-input
      displayName: 'Run Tests'

    - task: PublishTestResults@2
      inputs:
        testResultsFiles: "**/TEST-*.xml"
        testRunTitle: 'Python'
      condition: succeededOrFailed()

    - task: ArchiveFiles@2
      inputs:
        rootFolderOrFile: '$(Build.SourcesDirectory)'
        includeRootFolder: false
        archiveType: 'zip'
        archiveFile: '$(Build.ArtifactStagingDirectory)/Application$(Build.BuildId).zip'
        replaceExistingArchive: true
        verbose: true # (no value); this input is optional
    - publish: $(Build.ArtifactStagingDirectory)/Application$(Build.BuildId).zip
      displayName: 'Upload package'
      artifact: drop

- stage: Deploy
  displayName: Deploy Stage
  jobs:
  - job: Deploy
    displayName: Deploy job
    pool:
      vmImage: 'ubuntu-latest'
    steps:

    - task: AzureWebApp@1
      displayName: 'Deploy Azure Web App : {{ webAppName }}'
      inputs:
        azureSubscription: f2c72fb6-a706-4172-9ddb-3108855d8a1c
        appName: $(webAppName)
        package: $(Pipeline.Workspace)/drop/$(Build.BuildId).zip

        # The following parameter is specific to the Flask example code. You may
        # or may not need a startup command for your app.

        startUpCommand: 'python manage.py runserver'